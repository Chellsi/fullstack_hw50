import React, { useMemo, useCallback } from 'react';
import ListItem from './ListItem';
import { processItemValue } from '../../utils/calculations';
import type { DemoItem, ProcessedItem } from '../../types/demo.types';

interface ItemsListProps {
  items: DemoItem[];
  onDeleteItem: (id: number) => void;
}

/**
 * –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫—É –∑ –º–µ–º–æ—ñ–∑–∞—Ü—ñ—î—é –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö
 */
const ItemsList: React.FC<ItemsListProps> = ({ items, onDeleteItem }) => {
  // useMemo –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Å–ø–∏—Å–∫—É - –ø–µ—Ä–µ—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ items
  const processedItems: ProcessedItem[] = useMemo(() => {
    console.log('üîÑ –ü–µ—Ä–µ—Ä–∞—Ö—É–Ω–æ–∫ —Å–ø–∏—Å–∫—É...');
    return items.map(item => ({
      ...item,
      processedValue: processItemValue(item.value)
    }));
  }, [items]);

  // useCallback –¥–ª—è –º–µ–º–æ—ñ–∑–∞—Ü—ñ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏–¥–∞–ª–µ–Ω–Ω—è
  const handleDelete = useCallback((id: number) => {
    onDeleteItem(id);
  }, [onDeleteItem]);

  return (
    <div className="p-4 border border-gray-200 rounded-lg">
      <h3 className="text-lg font-semibold mb-2">–ú–µ–º–æ—ñ–∑–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫</h3>
      <p className="text-sm text-gray-600 mb-4">
        –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, –Ω–µ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞.
      </p>
      <div className="space-y-1">
        {processedItems.map(item => (
          <ListItem 
            key={item.id}
            item={item}
            onDelete={handleDelete}
          />
        ))}
        {processedItems.length === 0 && (
          <p className="text-gray-500 text-center py-4">–°–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</p>
        )}
      </div>
    </div>
  );
};

export default ItemsList;