import React, { useState, useCallback, useMemo } from 'react';

// –Ü–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
import RegularComponent from './components/RegularComponent';
import MemoizedComponent from './components/MemoizedComponent';
import ChildButton from './components/ChildButton';
import MemoizedChild from './components/MemoizedChild';
import ListItem from './components/ListItem';
import { resetCalculationCount } from './utils/calculations';

const App: React.FC = () => {
  const [count, setCount] = useState(0);
  const [calculationValue, setCalculationValue] = useState(1);
  const [items, setItems] = useState([
    { id: 1, name: '–ï–ª–µ–º–µ–Ω—Ç 1' },
    { id: 2, name: '–ï–ª–µ–º–µ–Ω—Ç 2' },
    { id: 3, name: '–ï–ª–µ–º–µ–Ω—Ç 3' }
  ]);

  // –§—É–Ω–∫—Ü—ñ—è –ë–ï–ó useCallback
  const handleClickRegular = () => {
    console.log('–ö–ª—ñ–∫ –±–µ–∑ useCallback');
  };

  // –§—É–Ω–∫—Ü—ñ—è –ó useCallback
  const handleClickMemoized = useCallback(() => {
    console.log('–ö–ª—ñ–∫ –∑ useCallback');
  }, []);

  // useCallback –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ —Å–ø–∏—Å–∫—É
  const handleDeleteItem = useCallback((id: number) => {
    setItems(prev => prev.filter(item => item.id !== id));
  }, []);

  // useMemo –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É
  const processedItems = useMemo(() => {
    console.log('üîÑ –ü–µ—Ä–µ—Ä–∞—Ö—É–Ω–æ–∫ —Å–ø–∏—Å–∫—É');
    return items.map(item => ({
      ...item,
      processed: true
    }));
  }, [items]);

  const addItem = () => {
    const newItem = { id: Date.now(), name: `–ù–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç ${items.length + 1}` };
    setItems(prev => [...prev, newItem]);
  };

  const handleReset = () => {
    resetCalculationCount();
    setCount(0);
    setCalculationValue(1);
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h1 className="text-2xl font-bold mb-6">–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –º–µ–º–æ—ñ–∑–∞—Ü—ñ—ó React</h1>
      
      <div className="mb-6 p-4 bg-yellow-100 rounded">
        <p className="text-sm mb-2">–í—ñ–¥–∫—Ä–∏–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å (F12) —â–æ–± –±–∞—á–∏—Ç–∏ –ª–æ–≥–∏ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—ñ–≤</p>
        <p className="text-xs text-yellow-700">
          <strong>–¢–µ—Å—Ç:</strong> –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–õ—ñ—á–∏–ª—å–Ω–∏–∫" - –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –¥–ª—è —á–µ—Ä–≤–æ–Ω–æ–≥–æ –±–ª–æ–∫—É
        </p>
      </div>

      {/* –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∏ */}
      <div className="grid grid-cols-4 gap-4 mb-8">
        <button 
          onClick={() => setCount(c => c + 1)}
          className="px-4 py-2 bg-blue-500 text-white rounded"
        >
          –õ—ñ—á–∏–ª—å–Ω–∏–∫: {count}
        </button>
        <button 
          onClick={() => setCalculationValue(v => v + 1)}
          className="px-4 py-2 bg-purple-500 text-white rounded"
        >
          –ó–Ω–∞—á–µ–Ω–Ω—è: {calculationValue}
        </button>
        <button 
          onClick={addItem}
          className="px-4 py-2 bg-green-500 text-white rounded"
        >
          –î–æ–¥–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç
        </button>
        <button 
          onClick={handleReset}
          className="px-4 py-2 bg-gray-500 text-white rounded"
        >
          –°–∫–∏–Ω—É—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏
        </button>
      </div>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è useMemo */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold mb-4">1. useMemo</h2>
        <p className="text-sm text-gray-600 mb-4">
          –ó–º—ñ–Ω—ñ—Ç—å –ª—ñ—á–∏–ª—å–Ω–∏–∫ - —á–µ—Ä–≤–æ–Ω–∏–π –±–ª–æ–∫ –≤–∏–∫–æ–Ω–∞—î –æ–±—á–∏—Å–ª–µ–Ω–Ω—è, –∑–µ–ª–µ–Ω–∏–π - –Ω—ñ
        </p>
        <div className="grid grid-cols-2 gap-4">
          <RegularComponent value={calculationValue} />
          <MemoizedComponent value={calculationValue} />
        </div>
      </div>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è useCallback + React.memo */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold mb-4">2. useCallback + React.memo</h2>
        <p className="text-sm text-gray-600 mb-4">
          –ó–º—ñ–Ω—ñ—Ç—å –ª—ñ—á–∏–ª—å–Ω–∏–∫ - —Ç—ñ–ª—å–∫–∏ —á–µ—Ä–≤–æ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è
        </p>
        <div className="grid grid-cols-2 gap-4">
          <div className="p-4 border rounded">
            <ChildButton onClick={handleClickRegular} />
          </div>
          <div className="p-4 border rounded">
            <MemoizedChild onClick={handleClickMemoized} />
          </div>
        </div>
      </div>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Å–ø–∏—Å–∫—É */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold mb-4">3. –ú–µ–º–æ—ñ–∑–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫</h2>
        <p className="text-sm text-gray-600 mb-4">
          –ó–º—ñ–Ω—ñ—Ç—å –ª—ñ—á–∏–ª—å–Ω–∏–∫ - —Å–ø–∏—Å–æ–∫ –Ω–µ –ø–µ—Ä–µ—Ä–∞—Ö—É—î—Ç—å—Å—è
        </p>
        <div className="border rounded p-4">
          {processedItems.map(item => (
            <ListItem 
              key={item.id}
              item={item}
              onDelete={handleDeleteItem}
            />
          ))}
        </div>
      </div>
    </div>
  );
};

export default App;